Dockerfile
https://jenkov.com/tutorials/docker/dockerfile.html#from
https://stackoverflow.com/questions/35061746/run-jar-file-in-docker-image


ECR
https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-push-ecr-image.html
https://medium.com/@danieltse/pull-the-docker-image-from-aws-ecr-in-kubernetes-dc7280d74904

EKS-->
3 CLIs
1. awscli (aws --version)
2. kubectl (kubectl version)
3. eksctl (eksctl version
https://github.com/weaveworks/eksctl/blob/main/README.md#installation


15  eksctl version
   16  clear
   17  eksctl create cluster
   18  eksctl get cluster
   19  kubectl get nodes
   20  kubectl get ns
   21  kubectl get nodes
   22  kubectl get all
   23  eksctl get cluster
   24  eksctl get nodegroup --cluster=scrumptious-mushroom-1688782585
   25  kubectl get nodes
   26  ls -l
   27  kubectl apply -f loadbalancer-service.yaml 
   28  clear
   29  kubectl get all
   30  clear
   31  kubectl get po
   32  kubectl get po -o wide
   33  kubectl get nodes
   34  kubectl get rs
   35  clear
   36  kubectl get po
   37  kubectl delete pod frontend-deployment-654476994c-tpk6v
   38  kubectl get po
   39  kubectl get deployment
   40  kubectl scale deployment frontend-deployment --replicas=3
   41  kubectl get deployment
   42  clear
   43  kubectl get po -o wide
   44  kubectl scale deployment frontend-deployment --replicas=2
   45  kubectl get po -o wide
   46  kubectl describe frontend-deployment-654476994c-pj9fw
   47  kubectl describe pod frontend-deployment-654476994c-pj9fw
   48  kubectl log frontend-deployment-654476994c-pj9fw
   49  kubectl logs frontend-deployment-654476994c-pj9fw
   50  cat loadbalancer-service.yaml 
   51  clear
   52  ls -l
   53  kubectl delete -f loadbalancer-service.yaml 
   54  eksctl get cluster
   55  eksctl delete cluster scrumptious-mushroom-1688782585
   56  history

eksctl create cluster --name=eksdemo1 --without-nodegroup

eksctl utils associate-iam-oidc-provider --region eu-central-1 --cluster eksdemo1 --approve

eksctl create nodegroup --cluster=eksdemo1 --name=eksdemo1-ng-public1 --node-type=t2.micro --nodes=2 --nodes-min=2 --nodes-max=4 --node-volume-size=20 --ssh-access --ssh-public-key=eks-demo --managed --asg-access --external-dns-access --full-ecr-access --appmesh-access --alb-ingress-access

# If you wish to provision default node-type, just skip this tag --node-type=t2.micro

eksctl get cluster

eksctl get nodegroup --cluster=eksdemo1

eksctl delete nodegroup --cluster=eksdemo1 --name=eksdemo1-ng-public1

eksctl delete cluster eksdemo1

kubectl create -f nodeport-service.yaml

kubectl get all

kubectl get nodes

kubectl get nodes -o wide

kubectl get pods -o wide

Login to one of the Nodes and execute - curl 192.168.22.225:32000

kubectl create -f loadbalancer-service.yaml

kubectl get svc

kubectl get po -o wide

kubectl get po

kubectl delete -f nodeport-service.yaml

kubectl delete -f loadbalancer-service.yaml

kubectl get hpa

kubectl get rs
